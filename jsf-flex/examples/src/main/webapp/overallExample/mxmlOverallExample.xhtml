<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:jf="http://jsf-flex.googlecode.com">
<!--
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
//-->

<head>
<style type="text/css">
.descriptionStyle{
    color:#708090;
    font-family:verdana;
    font-size:11px;
    font-weight:700;
}

.errorStyle{
    color:#ff6666;
    font-family:verdana;
    font-size:11px;
    font-weight:700;
}
</style>
</head>

<body>

<f:view renderKitId="MXML_BASIC">
    
    <h:form>
    	The button on the right is to test out the decode process and make sure that the information is mapped correctly
    	
    	<h:commandButton value="DecodeTester" action="success" />
        <br />
        <div class="descriptionStyle">
            Note that the client validation for the component with id textInputRef [namely mxmlNumberValidator] is not a child tag
            of the mxmlTextInput tag. However the regular validation tag [validateLongRange] is a child tag which performs the validation
            on the server side.
            <br />
            <h:message for="textAreaRef" errorClass="errorStyle" />
        </div>
        <br />
        
	    <jf:mxmlApplication mxmlPackageName="mxmlOverallExample" height="780" width="90%" errorColor="#B80000" errorFontSize="13">
	    	<jf:mxmlLabel text="Following label contains korean text to demonstrate locale [if browser's language is set to korean]" color="#FFFFFF" fontWeight="bold"/>
	    	<jf:mxmlLabel text="@Resource(bundle='LocaleExample', key='greeting')" color="#FFFFFF" fontWeight="bold" fontSize="14"/>
	    	
	    	<jf:mxmlXMLListCollection id="complexStructCollection">
	    		<ui:include src="../faceletFiles/mxmlXMLListExample.xhtml" />
	    	</jf:mxmlXMLListCollection>
	    	
	    	<jf:mxmlArray id="reallySimpleArray">
	    		<jf:mxmlObjectListEntries bindingBeanList="#{mxmlFaceletOverallBean.reallySimpleArray}">
	    			<jf:mxmlObjectElement>
	    				<jf:mxmlObjectProperty property="label" />
	    			</jf:mxmlObjectElement>
	    		</jf:mxmlObjectListEntries>
	    	</jf:mxmlArray>
	    	
	        <!-- Validation on the client side -->
		    <jf:mxmlNumberValidator exceedsMaxError="The number provided exceeds max value [60]." property="text"
		    						domain="int" integerError="Must be an integer value."
			    					lowerThanMinError="The number provided is lower than min value [10]." maxValue="60" minValue="10" 
			    					required="true" source="{textInputRef}" />
			
			<jf:mxmlAccordion width="100%" height="100%" selectedIndex="#{mxmlFaceletOverallBean.accordionSelectedIndex}">
			    
				<jf:mxmlTabNavigator width="100%" height="100%" selectedIndex="#{mxmlFaceletOverallBean.tabNavigatorSelectedIndex}">
						
			    		<jf:mxmlPanel label="First Tab" width="100%" height="100%">
			    			<jf:mxmlDividedBox direction="horizontal" width="100%" height="100%">
			    			
				    			<jf:mxmlBox width="30%" height="100%">
					    			<jf:mxmlTextInput id="textInputRef" text="#{mxmlFaceletOverallBean.textInputText}" />
					    			<jf:mxmlRichTextEditor textBinding="htmlText" htmlText="#{mxmlFaceletOverallBean.richTextEditorHtmlText}" />
							    	<jf:mxmlTextArea id="textAreaRef" text="#{mxmlFaceletOverallBean.textAreaText}" >
							    		<f:validateLongRange minimum="10" maximum="60" />
							    	</jf:mxmlTextArea>
							    	<jf:mxmlDateField text="#{mxmlFaceletOverallBean.dateFieldText}" width="100" />
							    	<jf:mxmlCheckBox label="CheckBox am I [\^$.|?*+(){}" selected="#{mxmlFaceletOverallBean.checkBoxSelected}" />
						    	</jf:mxmlBox>
						    	
						    	<jf:mxmlBox width="70%" height="100%">
						    		<jf:mxmlDataGrid bindingBeanList="#{mxmlFaceletOverallBean.wisePeopleEntries}" width="100%" 
						    							rowCount="4" resizableColumns="true" editable="true" height="100%">
								    	<jf:mxmlColumns>
								    		<jf:mxmlDataGridColumn dataField="name" headerText="Name" />
								    		<jf:mxmlDataGridColumn wordWrap="true" dataField="quote" headerText="Quote" minWidth="170" />
								    		<jf:mxmlDataGridColumn dataField="email" headerText="Email" />
								    	</jf:mxmlColumns>
								    </jf:mxmlDataGrid>
							   </jf:mxmlBox>
					    	
					    	</jf:mxmlDividedBox>
					    </jf:mxmlPanel>
			    			
			    		<jf:mxmlPanel label="Second Tab" width="100%" height="100%">
					    	<jf:mxmlComboBox text="#{mxmlFaceletOverallBean.comboBoxText}" selectedIndex="#{mxmlFaceletOverallBean.comboBoxSelectedIndex}" 
					    							dataProviderCollection="#{mxmlFaceletOverallBean.comboBoxDisplayEntries}" />
					    	<jf:mxmlRadioButton groupName="radioTest" label="First" value="First" 
					    							selectedValue="#{mxmlFaceletOverallBean.radioButtonSelectedValue}" selected="#{mxmlFaceletOverallBean.radioButtonFirstSelected}"/>
					       	<jf:mxmlRadioButton groupName="radioTest" label="Second" value="Second" selected="#{mxmlFaceletOverallBean.radioButtonSecondSelected}"/>
					       	
					       	<jf:mxmlNumericStepper minimum="0" maximum="10" value="#{mxmlFaceletOverallBean.numericStepperValue}" />
					       	<jf:mxmlColorPicker labelField="ColorPicker am I" selectedColor="#{mxmlFaceletOverallBean.colorPickerSelectedColor}" />
					       	<jf:mxmlDateChooser selectedDate="#{mxmlFaceletOverallBean.selectedDate}" width="300" />
			    		</jf:mxmlPanel>
	
			    </jf:mxmlTabNavigator>
			            	
		       	<jf:mxmlPanel width="100%" height="100%">
			    		  
			    		  <jf:mxmlDividedBox direction="horizontal" width="100%" height="100%">
			    		  	
			    		  	<jf:mxmlBox width="50%" height="100%">
				    			<jf:mxmlLinkButton label="To Link to something" />
				        		<jf:mxmlButton label="Am a Button" />
				        		<jf:mxmlLabel text="Simple List" />
				        		<jf:mxmlList width="100" dataProvider="{reallySimpleArray}" selectedIndex="#{mxmlFaceletOverallBean.listSelectedIndex}" />
				        		<jf:mxmlTree width="100" dataProvider="{complexStructCollection}" labelField="@label" selectedIndex="#{mxmlFaceletOverallBean.treeSelectedIndex}"/>
				        	</jf:mxmlBox>
				        	
			        		<jf:mxmlBox width="50%" height="100%">
				        		<jf:mxmlLabel text="Simple ButtonBar" />
				        		<jf:mxmlButtonBar>
				        			<jf:mxmlDataProvider>
	                                    <jf:mxmlObject>
	                                    	<jf:mxmlObjectStaticProperty staticPropertyName="label" staticPropertyValue="First Nesting" />
	                                    </jf:mxmlObject>
	                                    <jf:mxmlObject>
	                                    	<jf:mxmlObjectStaticProperty staticPropertyName="label" staticPropertyValue="Second Nesting" />
	                                    </jf:mxmlObject>
	                                </jf:mxmlDataProvider>
				        		</jf:mxmlButtonBar>
				        		<jf:mxmlLabel text="Simple ToggleButtonBar" />
				        		<jf:mxmlToggleButtonBar dataProvider="{reallySimpleArray}" />
				        		
				        		<jf:mxmlLabel text="Simple TabBar" />
				        		<jf:mxmlTabBar dataProvider="{reallySimpleArray}" />
				        		<jf:mxmlLabel text="Simple LinkBar" />
				        		<jf:mxmlLinkBar dataProvider="{reallySimpleArray}" />
				        	</jf:mxmlBox>
			        		
				          </jf:mxmlDividedBox>
				          
				</jf:mxmlPanel>
				
				<jf:mxmlBox width="100%" height="100%">
				
					<jf:mxmlBox width="100%" height="40%">
						
						<jf:mxmlLabel text="Simple VScrollBar" />
						<jf:mxmlVScrollBar />
						<jf:mxmlSpacer height="10" />
						
						<jf:mxmlLabel text="Simple HScrollBar" />
						<jf:mxmlHScrollBar />
						
						<jf:mxmlSpacer height="20" />
				        <jf:mxmlHRule width="100%" />
				        <jf:mxmlSpacer height="20" />
					    
						<jf:mxmlLabel text="Simple HSlider" />
						<jf:mxmlHSlider value="#{mxmlFaceletOverallBean.horizontalSliderValue}" />
						<jf:mxmlSpacer height="10" />
							
						<jf:mxmlLabel text="Simple VSlider" />
						<jf:mxmlVSlider value="#{mxmlFaceletOverallBean.verticalSliderValue}" />
						
					</jf:mxmlBox>
					
					<jf:mxmlTitleWindow title="Title Window" x="168" y="86" borderStyle="inset">
					    
					    <jf:mxmlTile>
					    	<jf:mxmlText label="Title Window Example" />
					    	<jf:mxmlText label="Tile Example" />
					    </jf:mxmlTile>
					    
					</jf:mxmlTitleWindow>
					
				</jf:mxmlBox>
				
			</jf:mxmlAccordion>
			
			<jf:mxmlApplicationControlBar dock="true">
	        	<jf:mxmlMenuBar dataProvider="{complexStructCollection}" labelField="@label" />
			    <jf:mxmlPopUpMenuButton dataProvider="{complexStructCollection}" labelField="@label" />
			</jf:mxmlApplicationControlBar>
			    		  
	    </jf:mxmlApplication>
    
    </h:form>
    
</f:view>

</body>

</html>